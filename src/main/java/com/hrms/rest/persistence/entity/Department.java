package com.hrms.rest.persistence.entity;
// Generated Apr 9, 2024, 8:01:41â€¯AM by Hibernate Tools 6.0.2.Final


import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import static jakarta.persistence.GenerationType.IDENTITY;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import java.util.HashSet;
import java.util.Set;

/**
 * Department generated by hbm2java
 */
@Entity
@Table(name="department"
    ,catalog="hrms_db"
)
public class Department  implements java.io.Serializable {


     private Integer departmentId;
     private Employee manager;
     private String departmentName;
     private Set<Employee> employees = new HashSet<Employee>(0);

    public Department() {
    }

	
    public Department(String departmentName) {
        this.departmentName = departmentName;
    }
    public Department(Employee manager, String departmentName, Set<Employee> employees) {
       this.manager = manager;
       this.departmentName = departmentName;
       this.employees = employees;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="department_id", unique=true, nullable=false)
    public Integer getDepartmentId() {
        return this.departmentId;
    }
    
    public void setDepartmentId(Integer departmentId) {
        this.departmentId = departmentId;
    }

    @OneToOne(fetch=FetchType.LAZY,cascade = CascadeType.REMOVE)
    @JoinColumn(name="manager_id")
    public Employee getManager() {
        return this.manager;
    }
    
    public void setManager(Employee manager) {
        this.manager = manager;
    }

    
    @Column(name="department_name", nullable=false, length=100)
    public String getDepartmentName() {
        return this.departmentName;
    }
    
    public void setDepartmentName(String departmentName) {
        this.departmentName = departmentName;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="workedDepartment" ,cascade = CascadeType.REMOVE)
    public Set<Employee> getEmployees() {
        return this.employees;
    }
    
    public void setEmployees(Set<Employee> employees) {
        this.employees = employees;
    }


    @Override
    public String toString() {
        return "Department [departmentId=" + departmentId + ", departmentName=" + departmentName + "]";
    }




}


