package com.hrms.rest.persistence.entity;
// Generated Apr 9, 2024, 8:01:41â€¯AM by Hibernate Tools 6.0.2.Final


import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import static jakarta.persistence.GenerationType.IDENTITY;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.sql.Date;
import java.util.HashSet;
import java.util.Set;


/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name="employee"
    ,catalog="hrms_db"
)
public class Employee  implements java.io.Serializable {


     private Integer employeeId;
     private Department workedDepartment;
     private Department managedDepartment;
     private String firstName;
     private String lastName;
     private String email;
     private String phoneNumber;
     private Date hireDate;
     private String jobTitle;
     private Set<Absence> absences = new HashSet<Absence>(0);
     private Set<Attendance> attendances = new HashSet<Attendance>(0);

    public Employee() {
    }

	
    public Employee(String firstName, String lastName) {
        this.firstName = firstName;
        this.lastName = lastName;
    }
    public Employee(Department workedDepartment, String firstName, String lastName, String email, String phoneNumber, Date hireDate, String jobTitle, Set<Absence> absences, Department managedDepartment, Set<Attendance> attendances) {
       this.workedDepartment = workedDepartment;
       this.firstName = firstName;
       this.lastName = lastName;
       this.email = email;
       this.phoneNumber = phoneNumber;
       this.hireDate = hireDate;
       this.jobTitle = jobTitle;
       this.absences = absences;
       this.managedDepartment = managedDepartment;
       this.attendances = attendances;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="employee_id", unique=true, nullable=false)
    public Integer getEmployeeId() {
        return this.employeeId;
    }
    
    public void setEmployeeId(Integer employeeId) {
        this.employeeId = employeeId;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="department_id")
    public Department getWorkedDepartment() {
        return this.workedDepartment;
    }
    
    public void setWorkedDepartment(Department workedDepartment) {
        this.workedDepartment = workedDepartment;
    }

    @Column(name="first_name", nullable=false, length=50)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Column(name="last_name", nullable=false, length=50)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Column(name="email", length=100)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name="phone_number", length=20)
    public String getPhoneNumber() {
        return this.phoneNumber;
    }
    
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="hire_date", length=10)
    public Date getHireDate() {
        return this.hireDate;
    }
    
    public void setHireDate(Date hireDate) {
        this.hireDate = hireDate;
    }

    @Column(name="job_title", length=100)
    public String getJobTitle() {
        return this.jobTitle;
    }
    
    public void setJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employee",cascade = CascadeType.REMOVE)
    public Set<Absence> getAbsences() {
        return this.absences;
    }
    
    public void setAbsences(Set<Absence> absences) {
        this.absences = absences;
    }



@OneToMany(fetch=FetchType.LAZY, mappedBy="employee",cascade = CascadeType.REMOVE)
    public Set<Attendance> getAttendances() {
        return this.attendances;
    }
    
    public void setAttendances(Set<Attendance> attendances) {
        this.attendances = attendances;
    }

    @OneToOne(mappedBy="manager")
    public Department getManagedDepartment() {
        return managedDepartment;
    }

   
    public void setManagedDepartment(Department managedDepartment) {
        this.managedDepartment = managedDepartment;
    }





}


